
#GCP POSTGRES Config
spring.cloud.gcp.sql.database-name=${DB_NAME}
#spring.datasource.password=test
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}
#spring.cloud.gcp.project-id=trusty-dialect-284219
spring.cloud.gcp.project-id=${PROJECT_ID}
#spring.cloud.gcp.sql.instance-connection-name=${PROJECT_ID}:${DB_REGION}:${DB_INSTANCE_NAME}
# So app starts despite "table already exists" errors.
spring.datasource.continue-on-error=true
spring.cloud.gcp.sql.enabled=true
# Enforces database initialization
spring.datasource.initialization-mode=always
# Leave empty for root, uncomment and fill out if you specified a serviceClient
#spring.datasource.username=postgres
#spring.datasource.username=min-app
spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/${DB_NAME}
# Uncomment if root password is specified
gcp.db.zone=europe-west1
gcp.db.name=min-ng
#spring.cloud.gcp.credentials.location=file:C:\\Users\\odina\\key\\minkey.json
#spring.cloud.gcp.credentials.location=${GOOGLE_APPLICATION_CREDENTIALS}
server.port=80

#For Hot Restart
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true

#Prevent failure during typecast when there is a null reference for a type/bean
spring.jackson.serialization.fail-on-empty-beans=false

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true

#Test query
spring.datasource.validationQuery = SELECT 1

spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.idle-timeout=5

# Show or not log for each sql query
spring.jpa.show-sql = false

spring.jpa.hibernate.ddl-auto=update

#spring.cloud.gcp.credentials.location=file:C:\\Users\\odina\\key\\minkey.json
#spring.datasource.initialization-mode=always
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#language
lang = en
#Redis Config
spring.redis.host=redis-svc
spring.redis.port=6379

spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
#SSL Key Info

#security.require-ssl=true
#server.ssl.key-store-password=leoHenry1
#server.ssl.key-store=src/main/resources/ebininfosoft-ssl-key.p12
#server.ssl.key-store-type=PKCS12

#app.base.url=http://34.121.49.87
app.base.url=${APP_BASE_URL}

#app.notification.url=https://minng-notification-service.herokuapp.com/api/v1/email
app.notification.url=${NOTIFICATION_URL}/email
#app.email.alert=noreply@min.ng
app.email.alert=${EMAIL}

#APP KEYS
#app.key.encryption.backend=stillkeepitsimpleAtTheBackEnd
app.key.encryption.backend=${ENCRYPTION_KEY_BACKEND}
#app.key.jwt=heioiraiaea894urijf9849hqfn9oq94089580q95u958i0
app.key.jwt=${JWT_KEY}


#10 minutes expiration
#app.api.jwt.expiration= 60000000
app.api.jwt.expiration= ${JWT_EXPIRATION_TIME}
#app.admin.email=deleo.henry@gmail.com
app.admin.email=${ADMIN_EMAIL}